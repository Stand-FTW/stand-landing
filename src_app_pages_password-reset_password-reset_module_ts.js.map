{"version":3,"file":"src_app_pages_password-reset_password-reset_module_ts.js","mappings":"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","sources":["./src/app/pages/password-reset/password-reset-routing.module.ts","./src/app/pages/password-reset/password-reset.module.ts","./src/app/pages/password-reset/password-reset.page.ts","./src/app/shared/services/auth/password.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordResetPage } from './password-reset.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordResetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordResetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { StepsModule } from 'primeng/steps';\nimport { MessageModule } from 'primeng/message';\n\nimport { DirectivesModule } from 'src/app/shared/directive/directives.module';\nimport { PasswordResetPageRoutingModule } from './password-reset-routing.module';\n\nimport { PasswordResetPage } from './password-reset.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    StepsModule,\n    MessageModule,\n    PasswordResetPageRoutingModule,\n    DirectivesModule\n  ],\n  declarations: [PasswordResetPage]\n})\nexport class PasswordResetPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { MenuItem, MessageService } from 'primeng/api';\n\nimport { PasswordService } from 'src/app/shared/services/auth/password.service';\nimport { ThemeService } from 'src/app/shared/services/theme/theme.service';\nimport { ToastEnum } from 'src/app/shared/constants/toast.constant';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.page.html',\n  styleUrls: ['./password-reset.page.scss'],\n})\nexport class PasswordResetPage implements OnInit, OnDestroy {\n\n  form: UntypedFormGroup;\n  steps: MenuItem[];\n  stepIndex = 0;\n\n  email: string;\n\n  private subscriptions = new Subscription();\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private passwordService: PasswordService,\n    private router: Router,\n    private menu: MenuController,\n    private themeService: ThemeService,\n    private toastService: MessageService,\n  ) {\n    this.form = this.formBuilder.group({\n      codigo: [, [Validators.required]],\n      email: [, [Validators.required, Validators.email]],\n      senha: [, [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  ngOnInit() {\n    document.body.setAttribute('color-theme', 'light');\n    this.themeService.switchTheme('saga-blue');\n\n    this.steps = [\n      {\n        label: 'Recuperação',\n      },\n      {\n        label: 'Reset',\n      },\n    ];\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.stepIndex = 0;\n  }\n\n  ionViewWillEnter() {\n    this.stepIndex = 0;\n    document.body.setAttribute('color-theme', 'light');\n    this.themeService.switchTheme('saga-blue');\n    this.menu.enable(false);\n  }\n\n  goBack() {\n    this.stepIndex = 0;\n    this.router.navigateByUrl('login');\n  }\n\n  setFocus(nextElement) {\n    nextElement.setFocus();\n  }\n\n  sendRequest() {\n    const email = this.form.get('email').value;\n\n    const sub = this.passwordService.requestReset(email)\n      .subscribe(response => {\n        this.stepIndex++;\n      });\n\n    this.subscriptions.add(sub);\n  }\n\n  doReset() {\n\n    const codigo = this.form.get('codigo').value;\n    const senha = this.form.get('senha').value;\n\n    const sub = this.passwordService.doReset(codigo, senha)\n      .subscribe(response => {\n        this.presentToast('success', 'Sucesso!', 'Senha alterada', ToastEnum.mediumDuration);\n        this.goBack();\n      });\n\n    this.subscriptions.add(sub);\n  }\n\n  isInputError(inputName: string): boolean {\n    const resp =\n      this.form.controls[inputName].dirty &&\n      this.form.controls[inputName].errors;\n\n    if (resp) {\n      return true;\n    }\n    return false;\n  }\n\n  disableBTN(): boolean {\n    const situacao = !this.form.valid;\n\n    return situacao;\n  }\n\n  private presentToast(\n    severity: string,\n    summary: string,\n    detail: string,\n    life: ToastEnum\n  ) {\n    this.toastService.clear();\n    this.toastService.add({\n      severity,\n      summary,\n      detail,\n      life,\n    });\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { API_CONFIG } from 'src/config/api.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  requestReset(email: string) {\n    return this.http.post(\n      `${API_CONFIG.baseURL}/auth/forgot`,\n      {\n        email,\n      },\n      {\n        responseType: 'json',\n      }\n    );\n  }\n\n  doReset(token: string, senha: string) {\n    const params = new HttpParams()\n      .set(\"token\", token);\n\n    return this.http.post(\n      `${API_CONFIG.baseURL}/auth/reset`,\n      {\n        password: senha,\n      },\n      {\n        params,\n      }\n    );\n  }\n\n\n  change(senha: string) {\n    return this.http.patch(\n      `${API_CONFIG.baseURL}/password/change`,\n      {\n        senha,\n      }\n    );\n  }\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}